{"version":3,"sources":["App.tsx","storybook/index.js","storybook/rn-addons.js","storybook/stories/index.js","storybook/stories/Accordion/Accordion.stories.js","storybook/stories/Button/Button.stories.js","storybook/stories/Checkbox/Checkbox.stories.js","storybook/stories/Icon/Icon.stories.js","storybook/stories/CenterView/style.js","storybook/stories/CenterView/index.js","storybook/stories/Input/Input.stories.js","storybook/stories/Text/Text.stories.js","storybook/stories/TextArea/TextArea.stories.js"],"names":["App","useFonts","Roboto_400Regular","Roboto_400Regular_Italic","Roboto_500Medium","Roboto_700Bold","theme","addDecorator","withKnobs","configure","require","module","StorybookUIRoot","getStorybookUI","AppRegistry","registerComponent","storiesOf","getStory","add","sections","header","content","name","color","variant","space","map","s","i","IconNameList","Object","keys","icons","onPress","action","colorScheme","isDisabled","startIcon","size","select","boolean","text","value","defaultIsChecked","HelperText","style","flexWrap","flexDirection","width","m","tokens","colors","dark","customIconProps","innerColor","neutral","main","flex","padding","justifyContent","alignItems","backgroundColor","CenterView","children","View","defaultProps","propTypes","PropTypes","node","Label","placeholder","InputRightElement","mr","isInvalid","ErrorMessage","level"],"mappings":"6LAkBe,SAASA,IACtB,MAAsBC,YAAS,CAC7BC,sBACAC,6BACAC,qBACAC,qBAGF,OAPA,aASI,cAAC,IAAD,CAAoBC,MAAOA,IAA3B,SACE,cAAC,IAAD,Q,kFCrBRC,uBAAaC,aAGbC,qBAAU,WACRC,EAAQ,OACPC,GAIH,IAAMC,EAAkBC,yBAAe,IAIvCC,IAAYC,kBAAkB,cAAc,kBAAMH,KAEnCA,Q,wHCvBf,Q,iCCAA,yD,kCCAA,qEAOAI,oBAAU,YAAaL,GACpBJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,sBAAsB,WACzB,IAAMC,EAAW,CACf,CACEC,OAAQ,eACRC,QAAS,cAAC,IAAD,CAAMC,KAAK,OAAOC,MAAM,iBAEnC,CACEH,OAAQ,gBACRC,QAAS,cAAC,IAAD,CAAMG,QAAQ,UAAd,8BAGb,OACE,cAAC,IAAD,CAAQC,MAAM,IAAd,SACGN,EAASO,KAAI,SAACC,EAAGC,GAChB,OACE,cAAC,IAAD,CAAWR,OAAQO,EAAEP,OAArB,SACGO,EAAEN,SAD6BO,a,wDCxB9C,gGASMC,EAAeC,OAAOC,KAAKC,KAEjChB,oBAAU,SAAUL,GACjBJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,YAAY,WACf,OACE,eAAC,IAAD,CAAQO,MAAO,EAAf,UACE,eAAC,IAAD,CAAQA,MAAO,EAAf,UACE,cAAC,IAAD,CACEQ,QAASC,iBAAO,gBAChBC,YAAY,UACZX,QAAQ,QAHV,2BAOA,cAAC,IAAD,CACES,QAASC,iBAAO,gBAChBC,YAAY,YACZX,QAAQ,QAHV,gCAQF,eAAC,IAAD,CAAQC,MAAO,EAAf,UACE,cAAC,IAAD,CACEQ,QAASC,iBAAO,gBAChBC,YAAY,UACZX,QAAQ,QAHV,2BAOA,cAAC,IAAD,CACES,QAASC,iBAAO,gBAChBC,YAAY,YACZX,QAAQ,QAHV,gCAQF,eAAC,IAAD,CAAQC,MAAO,EAAf,UACE,cAAC,IAAD,CACEQ,QAASC,iBAAO,gBAChBC,YAAY,UACZC,YAAU,EACVZ,QAAQ,QAJV,sBAQA,cAAC,IAAD,CACES,QAASC,iBAAO,gBAChBC,YAAY,UACZX,QAAQ,QACRa,UACE,cAAC,IAAD,CACEC,KAAK,IACLhB,KAAMiB,iBAAO,YAAaV,EAAcA,EAAa,MAP3D,gCAiBPX,IAAI,gBAAgB,WACnB,OACE,cAAC,IAAD,CACEe,QAASC,iBAAO,gBAChBC,YAAaI,iBACX,eACA,CAAC,UAAW,aACZ,WAEFH,WAAYI,kBAAQ,YAAY,GAChChB,QAASe,iBAAO,UAAW,CAAC,QAAS,SAAU,SARjD,SAUGE,eAAK,cAAe,eAI1BvB,IAAI,oBAAoB,WACvB,OACE,cAAC,IAAD,CACEe,QAASC,iBAAO,gBAChBC,YAAaI,iBACX,eACA,CAAC,UAAW,aACZ,WAEFH,WAAYI,kBAAQ,YAAY,GAChChB,QAASe,iBAAO,UAAW,CAAC,QAAS,SAAU,SAC/CF,UACE,cAAC,IAAD,CAAMf,KAAMiB,iBAAO,YAAaV,EAAcA,EAAa,MAV/D,SAaGY,eAAK,cAAe,iB,wDCzG7B,sEAMAzB,oBAAU,WAAYL,GACnBJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,YAAY,WACf,OACE,eAAC,IAAD,CAAQO,MAAO,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUiB,MAAM,QAAQC,kBAAgB,EAACL,KAAK,KAA9C,4BAGA,cAAC,IAAYM,WAAb,uCAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAUF,MAAM,QAAhB,+dAWF,cAAC,IAAD,CAAaN,YAAU,EAAvB,SACE,cAAC,IAAD,CAAUM,MAAM,QAAhB,sC,wDC9BV,sEAQA1B,oBAAU,OAAQL,GACfJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,kBAAkB,WACrB,IAAMW,EAAeC,OAAOC,KAAKC,KAEjC,OACE,cAAC,IAAD,CACEa,MAAO,CAAEC,SAAU,OAAQC,cAAe,UAAWC,MAAO,SAD9D,SAGGnB,EAAaH,KAAI,SAACJ,GACjB,OACE,cAAC,IAAD,CACEgB,KAAK,IACLW,EAAE,IAEF3B,KAAMA,EACNC,MAAOgB,iBACL,QACAW,IAAOC,OAAOnB,MACd1B,IAAM6C,OAAOnB,MAAMoB,MAErBC,gBAAiB,CACfC,WAAYf,iBACV,cACAW,IAAOC,OAAOI,QACdjD,IAAM6C,OAAOI,QAAQ,QAXpBjC,WAoBhBJ,IAAI,QAAQ,WACX,IAAMW,EAAeC,OAAOC,KAAKC,KAEjC,OACE,cAAC,IAAD,CACEV,KAAMiB,iBAAO,OAAQV,EAAcA,EAAa,IAChDN,MAAOgB,iBAAO,QAASW,IAAOC,OAAOnB,MAAO1B,IAAM6C,OAAOnB,MAAMoB,a,wHChDxD,GACbI,KAAM,CACJC,KAAM,EACNC,QAAS,GACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,Y,OCAN,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,OAAO,cAACC,EAAA,EAAD,CAAMnB,MAAOA,EAAMW,KAAnB,SAA0BO,IAGnCD,EAAWG,aAAe,CACxBF,SAAU,MAGZD,EAAWI,UAAY,CACrBH,SAAUI,IAAUC,O,kCCftB,8EAOApD,oBAAU,QAASL,GAChBJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,YAAY,WACf,OACE,eAAC,IAAD,CAAQO,MAAO,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAY4C,MAAb,oBACA,cAAC,IAAD,CAAOC,YAAY,0BAA0B5B,MAAM,kBACnD,cAAC,IAAYE,WAAb,uCAEF,eAAC,IAAD,CAAaR,YAAU,EAAvB,UACE,cAAC,IAAYiC,MAAb,6BACA,cAAC,IAAD,CACEC,YAAY,2BACZ5B,MAAM,sBAGV,eAAC,IAAD,WACE,cAAC,IAAY2B,MAAb,oBACA,cAAC,IAAD,CACE3B,MAAM,cACN6B,kBACE,cAAC,IAAD,CAAMjD,KAAK,gBAAgBgB,KAAK,IAAIf,MAAM,gBAAgBiD,GAAI,MAGlE,cAAC,IAAY5B,WAAb,uCAEF,eAAC,IAAD,CAAa6B,WAAS,EAAtB,UACE,cAAC,IAAYJ,MAAb,4BACA,cAAC,IAAD,CACEC,YAAY,2BACZ5B,MAAM,gBACN6B,kBACE,cAAC,IAAD,CAAMjD,KAAK,cAAcgB,KAAK,IAAIf,MAAM,eAAeiD,GAAI,MAG/D,cAAC,IAAYE,aAAb,kD,wDC3CV,wDAKA1D,oBAAU,OAAQL,GACfJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,sBAAsB,kBACzB,eAAC,IAAD,CAAQO,MAAO,EAAf,UACE,cAAC,IAAD,CAAMD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAUmD,MAAM,IAA9B,uBAGA,cAAC,IAAD,CAAMnD,QAAQ,OAAOmD,MAAM,IAA3B,oBAGA,cAAC,IAAD,CAAMnD,QAAQ,OAAOmD,MAAM,IAA3B,oBAGA,cAAC,IAAD,CAAMnD,QAAQ,UAAd,qBACA,cAAC,IAAD,CAAMA,QAAQ,SAAd,oBACA,cAAC,IAAD,CAAMA,QAAQ,QAAd,2B,wDCtCN,sEAMAR,oBAAU,WAAYL,GACnBJ,cAAa,SAACU,GAAD,OAAc,cAAC,IAAD,UAAaA,SACxCC,IAAI,YAAY,WACf,OACE,eAAC,IAAD,CAAQO,MAAO,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAY4C,MAAb,CAAmB/B,KAAK,KAAxB,qPAMA,cAAC,IAAD,CACEgC,YAAY,8BACZ5B,MAAM,kBAER,cAAC,IAAYE,WAAb,uCAEF,eAAC,IAAD,CAAaR,YAAU,EAAvB,UACE,cAAC,IAAYiC,MAAb,CAAmB/B,KAAK,KAAxB,qPAMA,cAAC,IAAD,CACEgC,YAAY,+BACZ5B,MAAM,sBAGV,eAAC,IAAD,CAAa+B,WAAS,EAAtB,UACE,cAAC,IAAYJ,MAAb,CAAmB/B,KAAK,KAAxB,qPAMA,cAAC,IAAD,CACEgC,YAAY,+BACZ5B,MAAM,kBAER,cAAC,IAAYgC,aAAb,kD","file":"static/js/app.8be0d2e2.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars\nimport React from 'react';\nimport { NativeBaseProvider } from 'native-base';\nimport { theme } from 'nrc-design-system';\nimport {\n  // eslint-disable-next-line camelcase\n  Roboto_400Regular,\n  // eslint-disable-next-line camelcase\n  Roboto_400Regular_Italic,\n  // eslint-disable-next-line camelcase\n  Roboto_500Medium,\n  // eslint-disable-next-line camelcase\n  Roboto_700Bold,\n  useFonts,\n} from '@expo-google-fonts/roboto';\n\nimport StorybookUIRoot from './storybook';\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    Roboto_400Regular,\n    Roboto_400Regular_Italic,\n    Roboto_500Medium,\n    Roboto_700Bold,\n  });\n\n  return (\n    fontsLoaded && (\n      <NativeBaseProvider theme={theme}>\n        <StorybookUIRoot />\n      </NativeBaseProvider>\n    )\n  );\n}\n","// if you use expo remove this line\nimport { AppRegistry } from 'react-native';\nimport { getStorybookUI, configure, addDecorator } from '@storybook/react-native';\nimport { withKnobs } from '@storybook/addon-knobs';\n\nimport './rn-addons';\n\n// enables knobs for all stories\naddDecorator(withKnobs);\n\n// import stories\nconfigure(() => {\n  require('./stories');\n}, module);\n\n// Refer to https://github.com/storybookjs/storybook/tree/master/app/react-native#start-command-parameters\n// To find allowed options for getStorybookUI\nconst StorybookUIRoot = getStorybookUI({});\n\n// If you are using React Native vanilla and after installation you don't see your app name here, write it manually.\n// If you use Expo you should remove this line.\nAppRegistry.registerComponent('%APP_NAME%', () => StorybookUIRoot);\n\nexport default StorybookUIRoot;\n","import '@storybook/addon-ondevice-knobs/register';\n","import './Accordion/Accordion.stories';\nimport './Button/Button.stories';\nimport './Checkbox/Checkbox.stories';\nimport './Icon/Icon.stories';\nimport './Input/Input.stories';\nimport './Text/Text.stories';\nimport './TextArea/TextArea.stories';\n","import React from 'react';\nimport { storiesOf } from '@storybook/react-native';\nimport { Text, VStack } from 'native-base';\nimport { Accordion, Icon } from 'nrc-design-system';\n\nimport CenterView from '../CenterView';\n\nstoriesOf('Accordion', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Overview, Variants', () => {\n    const sections = [\n      {\n        header: 'First Header',\n        content: <Icon name=\"save\" color=\"primary.500\" />,\n      },\n      {\n        header: 'Second Header',\n        content: <Text variant=\"caption\">Lorem ipsum...</Text>,\n      },\n    ];\n    return (\n      <VStack space=\"2\">\n        {sections.map((s, i) => {\n          return (\n            <Accordion header={s.header} key={i}>\n              {s.content}\n            </Accordion>\n          );\n        })}\n      </VStack>\n    );\n  });\n","import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { storiesOf } from '@storybook/react-native';\nimport { boolean, select, text } from '@storybook/addon-knobs';\nimport { Button, HStack, VStack } from 'native-base';\nimport { Icon, icons } from 'nrc-design-system';\n\nimport CenterView from '../CenterView';\n\nconst IconNameList = Object.keys(icons);\n\nstoriesOf('Button', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Overview', () => {\n    return (\n      <VStack space={4}>\n        <HStack space={2}>\n          <Button\n            onPress={action('clicked-text')}\n            colorScheme=\"primary\"\n            variant=\"major\"\n          >\n            Primary Major\n          </Button>\n          <Button\n            onPress={action('clicked-text')}\n            colorScheme=\"secondary\"\n            variant=\"major\"\n          >\n            Secondary Major\n          </Button>\n        </HStack>\n        <HStack space={2}>\n          <Button\n            onPress={action('clicked-text')}\n            colorScheme=\"primary\"\n            variant=\"minor\"\n          >\n            Primary Minor\n          </Button>\n          <Button\n            onPress={action('clicked-text')}\n            colorScheme=\"secondary\"\n            variant=\"minor\"\n          >\n            Secondary Minor\n          </Button>\n        </HStack>\n        <HStack space={2}>\n          <Button\n            onPress={action('clicked-text')}\n            colorScheme=\"primary\"\n            isDisabled\n            variant=\"major\"\n          >\n            Disabled\n          </Button>\n          <Button\n            onPress={action('clicked-text')}\n            colorScheme=\"primary\"\n            variant=\"major\"\n            startIcon={\n              <Icon\n                size=\"5\"\n                name={select('icon name', IconNameList, IconNameList[0])}\n              />\n            }\n          >\n            With Icon\n          </Button>\n        </HStack>\n      </VStack>\n    );\n  })\n  .add('Basic Button', () => {\n    return (\n      <Button\n        onPress={action('clicked-text')}\n        colorScheme={select(\n          'Color scheme',\n          ['primary', 'secondary'],\n          'primary',\n        )}\n        isDisabled={boolean('disabled', false)}\n        variant={select('Variant', ['major', 'minor'], 'major')}\n      >\n        {text('Button text', 'Submit')}\n      </Button>\n    );\n  })\n  .add('Button with Icon', () => {\n    return (\n      <Button\n        onPress={action('clicked-text')}\n        colorScheme={select(\n          'Color scheme',\n          ['primary', 'secondary'],\n          'primary',\n        )}\n        isDisabled={boolean('disabled', false)}\n        variant={select('Variant', ['major', 'minor'], 'major')}\n        startIcon={\n          <Icon name={select('icon name', IconNameList, IconNameList[0])} />\n        }\n      >\n        {text('Button text', 'Submit')}\n      </Button>\n    );\n  });\n","import React from 'react';\nimport { storiesOf } from '@storybook/react-native';\nimport { VStack, FormControl, Checkbox } from 'native-base';\n\nimport CenterView from '../CenterView';\n\nstoriesOf('Checkbox', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Overview', () => {\n    return (\n      <VStack space={4}>\n        <FormControl>\n          <Checkbox value=\"value\" defaultIsChecked size=\"sm\">\n            Checkbox Label\n          </Checkbox>\n          <FormControl.HelperText>This is a helper text</FormControl.HelperText>\n        </FormControl>\n        <FormControl>\n          <Checkbox value=\"value\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet,\n            consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n            exercitation ullamco laboris nisi ut aliquip ex ea commodo\n            consequat.\n          </Checkbox>\n        </FormControl>\n        <FormControl isDisabled>\n          <Checkbox value=\"value\">Checkbox Label</Checkbox>\n        </FormControl>\n      </VStack>\n    );\n  });\n","import { storiesOf } from '@storybook/react-native';\nimport React from 'react';\nimport { icons, theme, tokens, Icon } from 'nrc-design-system';\nimport { select } from '@storybook/addon-knobs';\nimport { Box } from 'native-base';\n\nimport CenterView from '../CenterView';\n\nstoriesOf('Icon', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Icon, Overview', () => {\n    const IconNameList = Object.keys(icons);\n\n    return (\n      <Box\n        style={{ flexWrap: 'wrap', flexDirection: 'initial', width: '250px' }}\n      >\n        {IconNameList.map((name) => {\n          return (\n            <Icon\n              size=\"6\"\n              m=\"2\"\n              key={name}\n              name={name}\n              color={select(\n                'color',\n                tokens.colors.icons,\n                theme.colors.icons.dark,\n              )}\n              customIconProps={{\n                innerColor: select(\n                  'inner color',\n                  tokens.colors.neutral,\n                  theme.colors.neutral['100'],\n                ),\n              }}\n            />\n          );\n        })}\n      </Box>\n    );\n  })\n  .add('Icon', () => {\n    const IconNameList = Object.keys(icons);\n\n    return (\n      <Icon\n        name={select('name', IconNameList, IconNameList[0])}\n        color={select('color', tokens.colors.icons, theme.colors.icons.dark)}\n      />\n    );\n  });\n","export default {\n  main: {\n    flex: 1,\n    padding: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#EAE7DD',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from 'react-native';\n\nimport style from './style';\n\nexport default function CenterView({ children }) {\n  return <View style={style.main}>{children}</View>;\n}\n\nCenterView.defaultProps = {\n  children: null,\n};\n\nCenterView.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { storiesOf } from '@storybook/react-native';\nimport { VStack, Input, FormControl } from 'native-base';\nimport { Icon } from 'nrc-design-system';\n\nimport CenterView from '../CenterView';\n\nstoriesOf('Input', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Overview', () => {\n    return (\n      <VStack space={4}>\n        <FormControl>\n          <FormControl.Label>Label</FormControl.Label>\n          <Input placeholder=\"This is a default input\" value=\"Default value\" />\n          <FormControl.HelperText>This is a helper text</FormControl.HelperText>\n        </FormControl>\n        <FormControl isDisabled>\n          <FormControl.Label>Disabled Input</FormControl.Label>\n          <Input\n            placeholder=\"This is a disabled input\"\n            value=\"Disabled value\"\n          />\n        </FormControl>\n        <FormControl>\n          <FormControl.Label>Label</FormControl.Label>\n          <Input\n            value=\"Valid value\"\n            InputRightElement={\n              <Icon name=\"circleSuccess\" size=\"6\" color=\"signalSuccess\" mr={3} />\n            }\n          />\n          <FormControl.HelperText>This is a valid input</FormControl.HelperText>\n        </FormControl>\n        <FormControl isInvalid>\n          <FormControl.Label>Invalid Input</FormControl.Label>\n          <Input\n            placeholder=\"This is an invalid input\"\n            value=\"Invalid value\"\n            InputRightElement={\n              <Icon name=\"circleError\" size=\"6\" color=\"signalDanger\" mr={3} />\n            }\n          />\n          <FormControl.ErrorMessage>\n            This is an error message\n          </FormControl.ErrorMessage>\n        </FormControl>\n      </VStack>\n    );\n  });\n","import { storiesOf } from '@storybook/react-native';\nimport { VStack, Text } from 'native-base';\n\nimport CenterView from '../CenterView';\n\nstoriesOf('Text', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Overview, Variants', () => (\n    <VStack space={2}>\n      <Text variant=\"display\" level=\"1\">\n        Display 1\n      </Text>\n      <Text variant=\"display\" level=\"2\">\n        Display 2\n      </Text>\n      <Text variant=\"heading\" level=\"1\">\n        Heading 1\n      </Text>\n      <Text variant=\"heading\" level=\"2\">\n        Heading 2\n      </Text>\n      <Text variant=\"heading\" level=\"3\">\n        Heading 3\n      </Text>\n      <Text variant=\"heading\" level=\"4\">\n        Heading 4\n      </Text>\n      <Text variant=\"heading\" level=\"5\">\n        Heading 5\n      </Text>\n      <Text variant=\"body\" level=\"1\">\n        Body 1\n      </Text>\n      <Text variant=\"body\" level=\"2\">\n        Body 2\n      </Text>\n      <Text variant=\"caption\">Caption</Text>\n      <Text variant=\"inline\">Inline</Text>\n      <Text variant=\"label\">Label</Text>\n    </VStack>\n  ));\n","import React from 'react';\nimport { storiesOf } from '@storybook/react-native';\nimport { VStack, TextArea, FormControl } from 'native-base';\n\nimport CenterView from '../CenterView';\n\nstoriesOf('TextArea', module)\n  .addDecorator((getStory) => <CenterView>{getStory()}</CenterView>)\n  .add('Overview', () => {\n    return (\n      <VStack space={4}>\n        <FormControl>\n          <FormControl.Label size=\"xs\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </FormControl.Label>\n          <TextArea\n            placeholder=\"This is a default text area\"\n            value=\"Default value\"\n          />\n          <FormControl.HelperText>This is a helper text</FormControl.HelperText>\n        </FormControl>\n        <FormControl isDisabled>\n          <FormControl.Label size=\"xs\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </FormControl.Label>\n          <TextArea\n            placeholder=\"This is a disabled text area\"\n            value=\"Disabled value\"\n          />\n        </FormControl>\n        <FormControl isInvalid>\n          <FormControl.Label size=\"xs\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </FormControl.Label>\n          <TextArea\n            placeholder=\"This is an invalid text area\"\n            value=\"Invalid value\"\n          />\n          <FormControl.ErrorMessage>\n            This is an error message\n          </FormControl.ErrorMessage>\n        </FormControl>\n      </VStack>\n    );\n  });\n"],"sourceRoot":""}